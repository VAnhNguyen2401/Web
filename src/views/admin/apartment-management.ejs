<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qu·∫£n l√Ω cƒÉn h·ªô - Admin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/style/apartment-management.css">
</head>

<body class="bg-gradient-to-br from-blue-50 via-blue-100 to-cyan-50 min-h-screen">
    <!-- Navigation Bar -->
    <nav class="fixed top-0 left-0 right-0 bg-white/80 backdrop-blur-md shadow-md z-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/homepage"
                        class="text-2xl font-bold bg-gradient-to-r from-blue-600 to-cyan-600 text-transparent bg-clip-text hover:from-blue-700 hover:to-cyan-700 transition-all duration-300">
                        üè¢ H·ªá th·ªëng thu ph√≠
                    </a>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/admin/user"
                        class="nav-link px-4 py-2 text-sm font-medium text-blue-600 hover:text-blue-700 transition-colors">
                        <i class="fas fa-users-cog mr-2"></i>Qu·∫£n l√Ω ng∆∞·ªùi d√πng
                    </a>
                    <a href="/admin/fee"
                        class="nav-link px-4 py-2 text-sm font-medium text-blue-600 hover:text-blue-700 transition-colors">
                        <i class="fas fa-money-bill mr-2"></i>Qu·∫£n l√Ω kho·∫£n thu
                    </a>
                    <a href="/admin/vehicle"
                        class="px-4 py-2 text-sm font-medium text-blue-600 hover:text-blue-700 transition-colors">
                        <i class="fas fa-money-bill mr-2"></i>Qu·∫£n l√Ω ph∆∞∆°ng ti·ªán
                    </a>

                    <a href="/logout"
                        class="px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-red-500 to-red-600 rounded-md hover:from-red-600 hover:to-red-700 transition-all duration-300">
                        <i class="fas fa-sign-out-alt mr-2"></i>ƒêƒÉng xu·∫•t
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="pt-24 pb-12 px-4 sm:px-6 lg:px-8">
        <div class="max-w-7xl mx-auto">
            <!-- Header -->
            <div class="mb-8 flex justify-between items-center">
                <div>
                    <h1
                        class="text-3xl font-bold bg-gradient-to-r from-blue-600 to-emerald-600 text-transparent bg-clip-text">
                        <i class="fas fa-building mr-3"></i>Qu·∫£n l√Ω cƒÉn h·ªô
                    </h1>
                    <p class="mt-2 text-gray-600">Danh s√°ch t·∫•t c·∫£ cƒÉn h·ªô trong t√≤a Blue Moon</p>
                </div>
                <button id="openAddApartmentModal"
                    class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center">
                    <i class="fas fa-plus mr-2"></i>Th√™m cƒÉn h·ªô
                </button>
            </div>

            <!-- Statistics Cards -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white/80 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-green-100">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">T·ªïng cƒÉn h·ªô</p>
                            <p class="text-2xl font-bold text-green-600" id="totalApartments">
                                500
                            </p>
                        </div>
                        <div class="text-green-600 text-3xl">üè†</div>
                    </div>
                </div>

                <div class="bg-white/80 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-blue-100">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">ƒê√£ c√≥ ch·ªß</p>
                            <p class="text-2xl font-bold text-blue-600" id="ownedApartments">
                                <%= stats.ownedApartments || 0 %>
                            </p>
                        </div>
                        <div class="text-blue-600 text-3xl">üë§</div>
                    </div>
                </div>

                <div class="bg-white/80 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-yellow-100">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">C√≤n tr·ªëng</p>
                            <p class="text-2xl font-bold text-yellow-600" id="availableApartments">
                                <%= 500 - (stats.ownedApartments || 0) %>
                            </p>
                        </div>
                        <div class="text-yellow-600 text-3xl">üè¢</div>
                    </div>
                </div>

                <div class="bg-white/80 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-emerald-100">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">ƒêang ·ªü</p>
                            <p class="text-2xl font-bold text-emerald-600" id="occupiedApartments">
                                <%= stats.occupiedApartments || 0 %>
                            </p>
                        </div>
                        <div class="text-emerald-600 text-3xl">üë•</div>
                    </div>
                </div>
            </div>

            <!-- Apartments Table -->
            <div class="bg-white/80 backdrop-blur-sm rounded-xl shadow-lg border border-green-100">
                <div class="px-6 py-4 border-b border-green-100">
                    <h3 class="text-lg font-semibold text-gray-900">Danh s√°ch cƒÉn h·ªô t√≤a Blue Moon</h3>
                </div>
                <div class="table-container">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50 sticky top-0">
                            <tr>
                                <th
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    M√£ cƒÉn h·ªô
                                </th>
                                <th
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    T√≤a nh√† / T·∫ßng / S·ªë nh√†
                                </th>
                                <th
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Lo·∫°i cƒÉn h·ªô
                                </th>
                                <th
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Di·ªán t√≠ch
                                </th>
                                <th
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Tr·∫°ng th√°i s·ªü h·ªØu
                                </th>
                                <th
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Ch·ªß s·ªü h·ªØu
                                </th>
                                <th
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Tr·∫°ng th√°i s·ª≠ d·ª•ng
                                </th>
                                <th
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Thao t√°c
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% apartments.forEach(apartment=> { %>
                                <tr class="hover:bg-gray-50">
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                        <%= apartment.ApartmentID %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                        <%= apartment.BuildingName %> / T<%= apartment.Floors %> / <%=
                                                    apartment.HouseNum %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span
                                            class="status-chip <%= apartment.ApartmentType === 'CƒÉn g√≥c' ? 'status-sold' : apartment.ApartmentType === 'CƒÉn gi·ªØa' ? 'status-normal' : 'status-available' %>">
                                            <%= apartment.ApartmentType %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                        <%= apartment.Area %> m¬≤
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span
                                            class="status-chip <%= apartment.OwnershipStatus === 'ƒê√£ c√≥ ch·ªß' ? 'status-sold' : 'status-available' %>">
                                            <%= apartment.OwnershipStatus %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                        <% if (apartment.OwnerName) { %>
                                            <div>
                                                <div class="font-medium">
                                                    <%= apartment.OwnerName %>
                                                </div>
                                                <div class="text-gray-500 text-xs">
                                                    <%= apartment.OwnerEmail %>
                                                </div>
                                            </div>
                                            <% } else { %>
                                                <span class="text-gray-400 italic">Ch∆∞a c√≥ ch·ªß s·ªü h·ªØu</span>
                                                <% } %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span
                                            class="status-chip <%= apartment.Use_Status === 'ƒêang ·ªü' ? 'status-occupied' : 'status-vacant' %>">
                                            <%= apartment.Use_Status %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <% if (apartment.OwnerID) { %>
                                            <!-- CƒÉn h·ªô ƒë√£ c√≥ ch·ªß -->
                                            <button
                                                onclick="removeOwner('<%= apartment.ApartmentID %>', '<%= apartment.OwnerName %>')"
                                                class="text-orange-600 hover:text-orange-900 mr-3"
                                                title="H·ªßy quy·ªÅn s·ªü h·ªØu">
                                                <i class="fas fa-user-minus"></i>
                                            </button>
                                            <% } else { %>
                                                <!-- CƒÉn h·ªô ch∆∞a c√≥ ch·ªß -->
                                                <button onclick="assignToUser('<%= apartment.ApartmentID %>')"
                                                    class="text-green-600 hover:text-green-900 mr-3"
                                                    title="G√°n cho user">
                                                    <i class="fas fa-user-plus"></i>
                                                </button>
                                                <% } %>
                                                    <button onclick="deleteApartment('<%= apartment.ApartmentID %>')"
                                                        class="text-red-600 hover:text-red-900" title="X√≥a cƒÉn h·ªô">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                    </td>
                                </tr>
                                <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </main>

    <!-- Hidden data for JavaScript -->
    <script type="application/json" id="availableUsersData"><%- JSON.stringify(availableUsers) %></script>
    <script type="application/json" id="apartmentsData"><%- JSON.stringify(apartments) %></script>

    <!-- Add Apartment Modal -->
    <div id="addApartmentModal"
        class="modal fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full items-center justify-center z-50">
        <div class="relative bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
            <div class="bg-green-600 px-6 py-4 rounded-t-lg">
                <h3 class="text-lg font-semibold text-white">Th√™m cƒÉn h·ªô m·ªõi</h3>
            </div>

            <form action="/admin/apartment/create" method="POST" class="p-6">
                <div class="grid grid-cols-2 gap-4">
                    <div class="col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-2">M√£ cƒÉn h·ªô *</label>
                        <input type="text" name="apartmentID" id="apartmentID" required readonly
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 bg-gray-50">
                        <p class="text-xs text-gray-500 mt-1">
                            Format: BM-T01-P01 (Blue Moon - T·∫ßng 01 - Ph√≤ng 01)
                        </p>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">T·∫ßng (1-50) *</label>
                        <input type="number" name="floors" id="floors" min="1" max="50" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                            onchange="updateApartmentInfo()">
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Ph√≤ng (1-10) *</label>
                        <select name="roomNumber" id="roomNumber" required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                            onchange="updateApartmentInfo()">
                            <option value="">-- Ch·ªçn ph√≤ng --</option>
                            <option value="1">01 - CƒÉn g√≥c</option>
                            <option value="2">02 - CƒÉn th∆∞·ªùng</option>
                            <option value="3">03 - CƒÉn th∆∞·ªùng</option>
                            <option value="4">04 - CƒÉn th∆∞·ªùng</option>
                            <option value="5">05 - CƒÉn gi·ªØa</option>
                            <option value="6">06 - CƒÉn gi·ªØa</option>
                            <option value="7">07 - CƒÉn th∆∞·ªùng</option>
                            <option value="8">08 - CƒÉn th∆∞·ªùng</option>
                            <option value="9">09 - CƒÉn th∆∞·ªùng</option>
                            <option value="10">10 - CƒÉn g√≥c</option>
                        </select>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Di·ªán t√≠ch (m¬≤) *</label>
                        <input type="number" name="area" id="area" step="0.1" required readonly
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 bg-gray-50">
                        <p class="text-xs text-gray-500 mt-1" id="areaInfo">
                            Di·ªán t√≠ch t·ª± ƒë·ªông t√≠nh theo v·ªã tr√≠
                        </p>
                    </div>

                    <div class="hidden">
                        <input type="hidden" name="houseNum" id="houseNum">
                        <input type="hidden" name="buildingName" value="Blue Moon">
                    </div>

                    <div class="col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Tr·∫°ng th√°i s·ª≠ d·ª•ng</label>
                        <select name="useStatus"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500">
                            <option value="Kh√¥ng ·ªü">Kh√¥ng ·ªü</option>
                            <option value="ƒêang ·ªü">ƒêang ·ªü</option>
                        </select>
                    </div>

                    <div class="col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Ch·ªß s·ªü h·ªØu</label>
                        <select name="ownerId"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500">
                            <option value="">-- Ch∆∞a c√≥ ch·ªß s·ªü h·ªØu --</option>
                            <% availableUsers.forEach(user=> { %>
                                <option value="<%= user.id %>">
                                    <%= user.firstName %>
                                        <%= user.lastName %> (<%= user.email %>)
                                </option>
                                <% }); %>
                        </select>
                        <p class="text-xs text-gray-500 mt-1">
                            * Ch·ªâ hi·ªÉn th·ªã c√°c user ch∆∞a s·ªü h·ªØu cƒÉn h·ªô n√†o
                        </p>
                    </div>
                </div>

                <div class="flex justify-end space-x-3 mt-6">
                    <button type="button" id="closeAddApartmentModal"
                        class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition-colors">
                        H·ªßy
                    </button>
                    <button type="submit"
                        class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors">
                        Th√™m cƒÉn h·ªô
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Get data from hidden script tags
        function getAvailableUsers() {
            try {
                const element = document.getElementById('availableUsersData');
                return JSON.parse(element.textContent);
            } catch (e) {
                console.error('Error parsing availableUsersData:', e);
                return [];
            }
        }

        function getApartmentsData() {
            try {
                const element = document.getElementById('apartmentsData');
                return JSON.parse(element.textContent);
            } catch (e) {
                console.error('Error parsing apartmentsData:', e);
                return [];
            }
        }

        // Modal controls
        const addModal = document.getElementById('addApartmentModal');
        const openAddBtn = document.getElementById('openAddApartmentModal');
        const closeAddBtn = document.getElementById('closeAddApartmentModal');

        openAddBtn.addEventListener('click', () => {
            addModal.classList.add('show');
        });

        closeAddBtn.addEventListener('click', () => {
            addModal.classList.remove('show');
        });

        // Close modal when clicking outside
        addModal.addEventListener('click', (e) => {
            if (e.target === addModal) {
                addModal.classList.remove('show');
            }
        });

        // Enhanced form submission with better error handling
        const apartmentForm = document.querySelector('#addApartmentModal form');
        if (apartmentForm) {
            apartmentForm.addEventListener('submit', function (e) {
                const ownerId = document.querySelector('select[name="ownerId"]').value;
                const useStatus = document.querySelector('select[name="useStatus"]').value;

                // N·∫øu ch·ªçn ch·ªß s·ªü h·ªØu th√¨ tr·∫°ng th√°i s·ª≠ d·ª•ng n√™n l√† "ƒêang ·ªü"
                if (ownerId && useStatus === 'Kh√¥ng ·ªü') {
                    if (!confirm('B·∫°n ƒë√£ ch·ªçn ch·ªß s·ªü h·ªØu nh∆∞ng tr·∫°ng th√°i s·ª≠ d·ª•ng l√† "Kh√¥ng ·ªü". B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c?')) {
                        e.preventDefault();
                        return false;
                    }
                }
            });
        }

        // Blue Moon specific functions
        function updateApartmentInfo() {
            const floor = document.getElementById('floors').value;
            const room = document.getElementById('roomNumber').value;

            if (floor && room) {
                // T·∫°o m√£ cƒÉn h·ªô: BM-T01-P01
                const apartmentID = `BM-T${floor.padStart(2, '0')}-P${room.padStart(2, '0')}`;
                document.getElementById('apartmentID').value = apartmentID;

                // T·∫°o s·ªë nh√†: 0101, 0102, ...
                const houseNum = `${floor.padStart(2, '0')}${room.padStart(2, '0')}`;
                document.getElementById('houseNum').value = houseNum;

                // T√≠nh di·ªán t√≠ch d·ª±a tr√™n v·ªã tr√≠
                let area;
                const floorNum = parseInt(floor);
                const roomNum = parseInt(room);

                if (roomNum === 1 || roomNum === 10) {
                    // CƒÉn g√≥c
                    area = 85.5 + (floorNum * 0.1);
                    document.getElementById('areaInfo').textContent = 'CƒÉn g√≥c - Di·ªán t√≠ch l·ªõn';
                } else if (roomNum === 5 || roomNum === 6) {
                    // CƒÉn gi·ªØa  
                    area = 65.0 + (floorNum * 0.1);
                    document.getElementById('areaInfo').textContent = 'CƒÉn gi·ªØa - Di·ªán t√≠ch trung b√¨nh';
                } else {
                    // CƒÉn th∆∞·ªùng
                    area = 55.5 + (floorNum * 0.1);
                    document.getElementById('areaInfo').textContent = 'CƒÉn th∆∞·ªùng - Di·ªán t√≠ch ti√™u chu·∫©n';
                }

                document.getElementById('area').value = area.toFixed(1);

                // C·∫≠p nh·∫≠t th√¥ng tin t·∫ßng
                let floorCategory = '';
                if (floorNum <= 5) floorCategory = 'T·∫ßng th·∫•p';
                else if (floorNum <= 25) floorCategory = 'T·∫ßng trung';
                else if (floorNum <= 40) floorCategory = 'T·∫ßng cao';
                else floorCategory = 'T·∫ßng cao c·∫•p';

                document.getElementById('areaInfo').textContent += ` (${floorCategory})`;
            } else {
                // Reset n·∫øu ch∆∞a ch·ªçn ƒë·ªß th√¥ng tin
                document.getElementById('apartmentID').value = '';
                document.getElementById('houseNum').value = '';
                document.getElementById('area').value = '';
                document.getElementById('areaInfo').textContent = 'Di·ªán t√≠ch t·ª± ƒë·ªông t√≠nh theo v·ªã tr√≠';
            }
        }

        // Check for existing apartment
        async function checkApartmentExists() {
            const apartmentID = document.getElementById('apartmentID').value;
            if (!apartmentID) return;

            // Simple check - in real implementation, you might want to call an API
            // For now, we'll rely on server-side validation
        }

        // Initialize form
        function initializeBlueMoonForm() {
            // Reset form when modal opens
            openAddBtn.addEventListener('click', () => {
                document.getElementById('floors').value = '';
                document.getElementById('roomNumber').value = '';
                updateApartmentInfo();
            });
        }

        // Call initialization
        initializeBlueMoonForm();

        // Delete apartment function
        function deleteApartment(apartmentID) {
            if (confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a cƒÉn h·ªô ${apartmentID}?\n\nL∆∞u √Ω: Vi·ªác x√≥a cƒÉn h·ªô s·∫Ω x√≥a ho√†n to√†n kh·ªèi h·ªá th·ªëng.`)) {
                fetch(`/admin/apartment/delete/${apartmentID}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message) {
                            alert(data.message);
                            location.reload();
                        } else if (data.error) {
                            alert('L·ªói: ' + data.error);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('C√≥ l·ªói x·∫£y ra khi x√≥a cƒÉn h·ªô');
                    });
            }
        }

        // Assign apartment to user function
        function assignToUser(apartmentID) {
            // L·∫•y danh s√°ch users c√≥ s·∫µn t·ª´ global variable
            const availableUsers = getAvailableUsers();

            if (availableUsers.length === 0) {
                alert('Kh√¥ng c√≥ user n√†o ch∆∞a c√≥ cƒÉn h·ªô. Vui l√≤ng t·∫°o user m·ªõi tr∆∞·ªõc.');
                return;
            }

            // T·∫°o dropdown select cho user
            const userOptions = availableUsers.map(user =>
                `<option value="${user.id}">${user.firstName} ${user.lastName} (${user.email})</option>`
            ).join('');

            const apartmentInfo = getApartmentsData().find(apt => apt.ApartmentID === apartmentID);

            const content = `
                <div class="p-4">
                    <h3 class="text-lg font-semibold mb-4">G√°n cƒÉn h·ªô ${apartmentID}</h3>
                    <div class="mb-4 p-3 bg-gray-50 rounded">
                        <p><strong>CƒÉn h·ªô:</strong> ${apartmentInfo.ApartmentType}</p>
                        <p><strong>Di·ªán t√≠ch:</strong> ${apartmentInfo.Area} m¬≤</p>
                        <p><strong>V·ªã tr√≠:</strong> ${apartmentInfo.BuildingName} - T·∫ßng ${apartmentInfo.Floors}</p>
                        <p><strong>Ph√¢n lo·∫°i:</strong> ${apartmentInfo.FloorCategory}</p>
                    </div>
                    <div class="mb-4">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Ch·ªçn ch·ªß s·ªü h·ªØu:</label>
                        <select id="selectedUserId" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                            <option value="">-- Ch·ªçn user --</option>
                            ${userOptions}
                        </select>
                    </div>
                    <div class="flex justify-end space-x-2">
                        <button onclick="closeAssignModal()" class="px-4 py-2 bg-gray-300 text-gray-700 rounded">H·ªßy</button>
                        <button onclick="confirmAssign('${apartmentID}')" class="px-4 py-2 bg-green-600 text-white rounded">X√°c nh·∫≠n</button>
                    </div>
                </div>
            `;

            // T·∫°o modal ƒë·ªông
            const modal = document.createElement('div');
            modal.id = 'assignModal';
            modal.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50';
            modal.innerHTML = `<div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">${content}</div>`;

            document.body.appendChild(modal);
        }

        function confirmAssign(apartmentID) {
            const selectedUserId = document.getElementById('selectedUserId').value;

            if (!selectedUserId) {
                alert('Vui l√≤ng ch·ªçn user');
                return;
            }

            // G·ª≠i request c·∫≠p nh·∫≠t cƒÉn h·ªô
            fetch(`/admin/apartment/assign`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    apartmentID: apartmentID,
                    ownerId: selectedUserId
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        alert(data.message);
                        location.reload();
                    } else if (data.error) {
                        alert('L·ªói: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('C√≥ l·ªói x·∫£y ra khi g√°n cƒÉn h·ªô');
                })
                .finally(() => {
                    closeAssignModal();
                });
        }

        function closeAssignModal() {
            const modal = document.getElementById('assignModal');
            if (modal) {
                modal.remove();
            }
        }

        // Edit apartment function (placeholder) - removed since we don't need it anymore
        function editApartment(apartmentID) {
            alert(`Ch·ª©c nƒÉng ch·ªânh s·ª≠a kh√¥ng c·∫ßn thi·∫øt v√¨ ch·ªâ hi·ªÉn th·ªã cƒÉn h·ªô available.\n\nƒê·ªÉ qu·∫£n l√Ω cƒÉn h·ªô:\n- G√°n cho user: Click n√∫t "G√°n cho user"\n- X√≥a cƒÉn h·ªô: Click n√∫t "X√≥a"`);
        }

        // Auto-refresh available users info
        function refreshAvailableUsers() {
            const userSelect = document.querySelector('select[name="ownerId"]');
            const userCount = userSelect.options.length - 1; // Tr·ª´ option "Ch∆∞a c√≥ ch·ªß s·ªü h·ªØu"

            if (userCount === 0) {
                const infoText = document.querySelector('.text-xs.text-gray-500');
                if (infoText) {
                    infoText.innerHTML = '* T·∫•t c·∫£ user ƒë√£ c√≥ cƒÉn h·ªô. <a href="/admin/user" class="text-blue-600 hover:underline">Th√™m user m·ªõi</a>';
                }
            }
        }

        // Call on page load
        document.addEventListener('DOMContentLoaded', refreshAvailableUsers);

        // Make functions globally available
        window.deleteApartment = deleteApartment;
        window.editApartment = editApartment;
        window.assignToUser = assignToUser;
        window.removeOwner = removeOwner;

        // Remove apartment owner function
        function removeOwner(apartmentID, ownerName) {
            if (confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy quy·ªÅn s·ªü h·ªØu cƒÉn h·ªô ${apartmentID} c·ªßa ${ownerName}?\n\nCƒÉn h·ªô s·∫Ω tr·ªü v·ªÅ tr·∫°ng th√°i tr·ªëng v√† c√≥ th·ªÉ g√°n cho user kh√°c.`)) {
                fetch(`/admin/apartment/remove-owner`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        apartmentID: apartmentID
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message) {
                            alert(data.message);
                            location.reload();
                        } else if (data.error) {
                            alert('L·ªói: ' + data.error);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('C√≥ l·ªói x·∫£y ra khi h·ªßy quy·ªÅn s·ªü h·ªØu');
                    });
            }
        }
    </script>
</body>

</html>