<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qu·∫£n l√Ω ng∆∞·ªùi d√πng - H·ªá th·ªëng thu ph√≠ chung c∆∞</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        .user-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .user-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>

<body class="bg-gradient-to-br from-blue-50 via-blue-100 to-cyan-50 min-h-screen">
    <!-- Navigation Bar -->
    <nav class="fixed top-0 left-0 right-0 bg-white/80 backdrop-blur-md shadow-md z-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/homepage"
                        class="text-2xl font-bold bg-gradient-to-r from-blue-600 to-cyan-600 text-transparent bg-clip-text hover:from-blue-700 hover:to-cyan-700 transition-all duration-300">
                        üè¢ H·ªá th·ªëng thu ph√≠
                    </a>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/admin/fee"
                        class="px-4 py-2 text-sm font-medium text-blue-600 hover:text-blue-700 transition-colors">
                        <i class="fas fa-money-bill mr-2"></i>Qu·∫£n l√Ω thu ph√≠
                    </a>
                    <a href="/logout"
                        class="px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-red-500 to-red-600 rounded-md hover:from-red-600 hover:to-red-700 transition-all duration-300">
                        <i class="fas fa-sign-out-alt mr-2"></i>ƒêƒÉng xu·∫•t
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="pt-24 pb-12 px-4 sm:px-6 lg:px-8">
        <div class="max-w-7xl mx-auto">
            <!-- Header -->
            <div class="mb-8 flex justify-between items-center">
                <div>
                    <h1
                        class="text-3xl font-bold bg-gradient-to-r from-blue-600 to-cyan-600 text-transparent bg-clip-text">
                        <i class="fas fa-users mr-3"></i>Qu·∫£n l√Ω ng∆∞·ªùi d√πng
                    </h1>
                    <p class="mt-2 text-gray-600">Danh s√°ch t·∫•t c·∫£ ng∆∞·ªùi d√πng trong h·ªá th·ªëng</p>
                </div>
                <button id="openAddUserModal"
                    class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center">
                    <i class="fas fa-plus mr-2"></i>Th√™m ng∆∞·ªùi d√πng
                </button>
            </div>

            <!-- User List -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <% users.forEach(function(user) { %>
                    <div class="user-card bg-white/80 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-blue-100">
                        <div class="flex items-center mb-4">
                            <div
                                class="w-12 h-12 rounded-full bg-gradient-to-r from-blue-600 to-cyan-600 flex items-center justify-center shadow-md mr-4">
                                <i class="fas fa-user text-white text-xl"></i>
                            </div>
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900">
                                    <%= user.fullName %>
                                </h3>
                                <div class="text-sm text-gray-500">
                                    <%= user.email %>
                                </div>
                                <div class="text-sm text-gray-500">
                                    <i class="fas fa-phone mr-1"></i>
                                    <%= user.phoneNumber || 'Ch∆∞a c·∫≠p nh·∫≠t' %>
                                </div>
                            </div>
                        </div>

                        <div class="space-y-3">
                            <div class="flex items-center text-sm">
                                <span class="w-24 text-gray-500">Vai tr√≤:</span>
                                <span
                                    class="px-3 py-1 text-xs font-medium rounded-full 
                                    <%= user.role === 'admin' ? 'bg-purple-100 text-purple-800' : 'bg-blue-100 text-blue-800' %>">
                                    <i class="fas <%= user.role === 'admin' ? 'fa-user-shield' : 'fa-user' %> mr-1"></i>
                                    <%= user.role==='admin' ? 'Qu·∫£n tr·ªã vi√™n' : 'Ng∆∞·ªùi d√πng' %>
                                </span>
                            </div>
                            <div class="flex items-center text-sm">
                                <span class="w-24 text-gray-500">ID:</span>
                                <span class="text-gray-700">
                                    <%= user.id %>
                                </span>
                            </div>
                            <div class="flex items-center text-sm">
                                <span class="w-24 text-gray-500">Ng√†y t·∫°o:</span>
                                <span class="text-gray-700">
                                    <%= user.createdAt %>
                                </span>
                            </div>
                            <div class="flex items-center text-sm">
                                <span class="w-24 text-gray-500">C·∫≠p nh·∫≠t:</span>
                                <span class="text-gray-700">
                                    <%= user.updatedAt %>
                                </span>
                            </div>
                        </div>

                        <!-- Action buttons -->
                        <div class="mt-4 flex justify-end space-x-2">
                            <button class="edit-user-btn p-2 text-blue-600 hover:text-blue-800 transition-colors"
                                data-user-id="<%= user.id %>" data-first-name="<%= user.firstName %>"
                                data-last-name="<%= user.lastName %>" data-email="<%= user.email %>"
                                data-role="<%= user.role %>" data-phone-number="<%= user.phoneNumber || '' %>">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="delete-user-btn p-2 text-red-600 hover:text-red-800 transition-colors"
                                data-user-id="<%= user.id %>">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                    <% }); %>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-white/80 backdrop-blur-sm mt-12 border-t border-blue-100">
        <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
            <p class="text-center text-gray-600 text-sm">
                ¬© 2024 H·ªá th·ªëng thu ph√≠ chung c∆∞. All rights reserved.
            </p>
        </div>
    </footer>

    <!-- Modal th√™m/s·ª≠a ng∆∞·ªùi d√πng -->
    <div id="userModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full z-50">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <div class="mt-3">
                <h3 id="modalTitle" class="text-lg leading-6 font-medium text-gray-900 mb-4">Th√™m ng∆∞·ªùi d√πng m·ªõi</h3>
                <form id="userForm" class="space-y-4">
                    <input type="hidden" id="userId" name="userId">
                    <div>
                        <label for="firstName" class="block text-sm font-medium text-gray-700">H·ªç</label>
                        <input type="text" id="firstName" name="firstName" required
                            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div>
                        <label for="lastName" class="block text-sm font-medium text-gray-700">T√™n</label>
                        <input type="text" id="lastName" name="lastName" required
                            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                        <input type="email" id="email" name="email" required
                            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div>
                        <label for="phoneNumber" class="block text-sm font-medium text-gray-700">S·ªë ƒëi·ªán tho·∫°i</label>
                        <input type="tel" id="phoneNumber" name="phoneNumber" required pattern="^\+?[0-9]{10,15}$"
                            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                        <p class="mt-1 text-sm text-gray-500">ƒê·ªãnh d·∫°ng: 10-15 ch·ªØ s·ªë, c√≥ th·ªÉ b·∫Øt ƒë·∫ßu b·∫±ng d·∫•u +</p>
                    </div>
                    <div id="passwordGroup">
                        <label for="password" class="block text-sm font-medium text-gray-700">M·∫≠t kh·∫©u</label>
                        <input type="password" id="password" name="password"
                            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                        <p class="mt-1 text-sm text-gray-500" id="passwordHint"></p>
                    </div>
                    <div>
                        <label for="role" class="block text-sm font-medium text-gray-700">Vai tr√≤</label>
                        <select id="role" name="role"
                            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                            <option value="user">Ng∆∞·ªùi d√πng</option>
                            <option value="admin">Qu·∫£n tr·ªã vi√™n</option>
                        </select>
                    </div>
                    <div class="flex justify-end space-x-3 mt-6">
                        <button type="button" id="closeModal"
                            class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 transition-colors">
                            H·ªßy
                        </button>
                        <button type="submit" id="submitBtn"
                            class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                            Th√™m ng∆∞·ªùi d√πng
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Modal controls
        const modal = document.getElementById('userModal');
        const openModalBtn = document.getElementById('openAddUserModal');
        const closeModalBtn = document.getElementById('closeModal');
        const form = document.getElementById('userForm');
        const modalTitle = document.getElementById('modalTitle');
        const submitBtn = document.getElementById('submitBtn');
        const passwordGroup = document.getElementById('passwordGroup');
        const passwordInput = document.getElementById('password');
        const passwordHint = document.getElementById('passwordHint');
        let isEditMode = false;

        // Function to reset form for adding new user
        function resetForm() {
            form.reset();
            document.getElementById('userId').value = '';
            isEditMode = false;
            modalTitle.textContent = 'Th√™m ng∆∞·ªùi d√πng m·ªõi';
            submitBtn.textContent = 'Th√™m ng∆∞·ªùi d√πng';
            passwordInput.required = true;
            passwordHint.textContent = '';
            document.getElementById('email').readOnly = false;
            document.getElementById('firstName').value = '';
            document.getElementById('lastName').value = '';
            document.getElementById('email').value = '';
            document.getElementById('password').value = '';
            document.getElementById('role').value = 'user';
            document.getElementById('phoneNumber').value = '';
        }

        // Function to fill form with user data for editing
        function fillFormWithUserData(userData) {
            isEditMode = true;
            modalTitle.textContent = 'Ch·ªânh s·ª≠a th√¥ng tin ng∆∞·ªùi d√πng';
            submitBtn.textContent = 'L∆∞u thay ƒë·ªïi';

            document.getElementById('userId').value = userData.id;
            document.getElementById('firstName').value = userData.firstName;
            document.getElementById('lastName').value = userData.lastName;
            document.getElementById('email').value = userData.email;
            document.getElementById('role').value = userData.role;
            document.getElementById('phoneNumber').value = userData.phoneNumber || '';

            // Handle password field for edit mode
            passwordInput.required = false;
            passwordInput.value = '';
            passwordHint.textContent = 'ƒê·ªÉ tr·ªëng n·∫øu kh√¥ng mu·ªën thay ƒë·ªïi m·∫≠t kh·∫©u';
            document.getElementById('email').readOnly = true;
        }

        openModalBtn.addEventListener('click', () => {
            resetForm();
            modal.classList.remove('hidden');
        });

        closeModalBtn.addEventListener('click', () => {
            modal.classList.add('hidden');
            resetForm();
        });

        // Close modal when clicking outside
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.classList.add('hidden');
                resetForm();
            }
        });

        // Add click event listeners to edit buttons
        document.querySelectorAll('.edit-user-btn').forEach(button => {
            button.addEventListener('click', (e) => {
                e.preventDefault();
                const userData = {
                    id: button.dataset.userId,
                    firstName: button.dataset.firstName,
                    lastName: button.dataset.lastName,
                    email: button.dataset.email,
                    role: button.dataset.role,
                    phoneNumber: button.dataset.phoneNumber
                };
                fillFormWithUserData(userData);
                modal.classList.remove('hidden');
            });
        });

        // Form submission
        form.addEventListener('submit', async function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());
            const userId = data.userId;
            delete data.userId;

            // Validate required fields
            if (!data.firstName || !data.lastName || !data.email || !data.phoneNumber) {
                alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc');
                return;
            }

            // Validate phone number format
            const phoneRegex = /^\+?[0-9]{10,15}$/;
            if (!phoneRegex.test(data.phoneNumber)) {
                alert('S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p 10-15 ch·ªØ s·ªë');
                return;
            }

            // Validate password for new user
            if (!isEditMode && !data.password) {
                alert('Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u cho ng∆∞·ªùi d√πng m·ªõi');
                return;
            }

            // Remove password if it's empty in edit mode
            if (isEditMode && !data.password) {
                delete data.password;
            }

            try {
                const url = isEditMode ? `/admin/user/${userId}` : '/admin/user';
                const method = isEditMode ? 'PUT' : 'POST';

                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    alert(isEditMode ? 'C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!' : 'Th√™m ng∆∞·ªùi d√πng th√†nh c√¥ng!');
                    window.location.reload();
                } else {
                    const error = await response.text();
                    alert(error);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω y√™u c·∫ßu');
            }
        });

        // Delete user
        document.querySelectorAll('.delete-user-btn').forEach(button => {
            button.addEventListener('click', async (e) => {
                e.preventDefault();
                if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y?')) {
                    const userId = button.dataset.userId;
                    try {
                        const response = await fetch(`/admin/user/${userId}`, {
                            method: 'DELETE'
                        });

                        if (response.ok) {
                            alert('X√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng!');
                            window.location.reload();
                        } else {
                            const error = await response.text();
                            alert(error);
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('ƒê√£ x·∫£y ra l·ªói khi x√≥a ng∆∞·ªùi d√πng');
                    }
                }
            });
        });
    </script>
</body>

</html>